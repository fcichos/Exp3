---
title: Optical Elements Part I
jupyter: python3
format:
  html:
    code-fold: true
---

```{python}
# | echo: false
## just for plotting late

import matplotlib.pyplot as plt
import numpy as np

plt.rcParams.update({'font.size': 12,
                     'axes.titlesize': 18,
                     'axes.labelsize': 12,
                     'lines.linewidth': 1,
                     'lines.markersize': 10,
                     'xtick.labelsize' : 12,
                     'ytick.labelsize' : 12,
                     'xtick.top' : True,
                     'xtick.direction' : 'in',
                     'ytick.right' : True,
                     'ytick.direction' : 'in',})
```

## Mirrors

### Plane Mirrors


When light radiates from a point $P$ and reflects off a mirror, as shown in the image, the reflected rays diverge but appear to originate from a point $P'$ located behind the mirror. According to the law of reflection, this image point is positioned at the same distance behind the mirror as the original object point is in front of it. As a result, an observer receiving these reflected rays, such as on their retina, perceives the point as if it were situated behind the mirror, even though no light actually travels behind the mirror surface.

::: {#fig-plane-mirror-combined layout-ncol=2}

![](img/plane_mirror.png){#fig-plane-mirror width="80%"}

![](img/reflection_plane.png){#fig-reflection-plane width="100%"}

Image formation on a plane mirror.
:::

When multiple points of an object emit light towards the mirror, this principle applies to each point. As a result, the entire object appears as an image behind the mirror. Since each point of the image is equidistant from the mirror as its corresponding object point, the image has the same size as the object. This leads to the definition of magnification as:

$$
M=\frac{h_{\text{image}}}{h_{\text{object}}}
$$

![Image formation on a plane mirror.](img/image_plane_mirror.png){#fig-plane-mirror width="60%" fig-align="center"}

::: {.callout-note}
## Virtual Images

A virtual image is an optical illusion where light rays appear to come from a point, but don't actually converge there. Unlike real images, virtual images can't be projected onto a screen. They're commonly seen in plane mirrors, convex mirrors, and when objects are closer to a lens than its focal point. **Remember: for virtual images, light rays only seem to originate from the image when traced backwards.**
:::

::: {.callout-note}
## Real Images

A real image forms when light rays actually meet at a point after reflection or refraction. These images can be projected onto a screen because light physically passes through the image location. Real images are often inverted and occur with concave mirrors and lenses when objects are beyond the focal point. **Key point: real images involve actual convergence of light rays.**
:::

### Concave Mirrors

For a concave mirror (where the reflecting surface is on the inside of the spherical curve), applying the law of reflection yields interesting results. Light rays parallel to the optical axis, at a distance $h$ from it, are reflected towards the axis and intersect it at a specific point $F$. Due to the mirror's symmetry, a parallel ray on the opposite side of the axis will also converge to this same point $F$.

![Reflection of a parallel ray incident at a height $h$ from the optical axis on a concave mirror. ](img/concave_mirror.png){#fig-concave-mirror-ray width="60%" fig-align="center"}

We may calculate the position of the point $F$, e.g. the distance from the mirror surface point $O$, by applying the law of reflection. If the spherical mirror surface has a radius $R$, then the distance between the center of the sphere $M$ and the point $F$ is given by

$$FM=\frac{R}{2\cos(\alpha)}$$

Therefore, we can also calculate the distance of the mirror surface from the point $F$, which results in

\begin{equation}
OF=R\left (1-\frac{1}{2\cos(\alpha)}\right)=f
\end{equation}

This distance is the so-called focal length of the concave mirror $f$. For small angle $\alpha$, the above equation yields the so called paraxial limit (all angles are small and the rays are close to the optical axis). In this limit we find $\cos(\alpha)\approx 1$ and the focal length becomes $f=R/2$. If we replace the cosine function by
$\cos(\alpha)=\sqrt{1-\sin^2(\alpha)}$ with $\sin(\alpha)=h/R$, we find

\begin{equation}
f=R\left [ 1-\frac{R}{2\sqrt{R^2-h^2}}\right ]
\end{equation}

This equation is telling us, that the focal distance is not a single value for a concave mirror. The focal distance rather changes with the distance $h$ from the optical axis. If $h$ approaches $R$ the focal length become shorter.

::: {.callout-note collapse="true"}
## Focal Length of a Concave Spherical Mirror

```{python}
#| code-fold: true
#| label: fig-spherical-mirror
#| fig-cap: "Spherical mirror of radius $R=4$ reflecting parallel rays, showing spherical aberration and focal distance as a function of the distance from the optical axis $h$."

import numpy as np
import matplotlib.pyplot as plt

# Set up the plot
fig,(ax1,ax2)=plt.subplots(1,2,figsize=(7, 3))


ax1.axhline(y=0, color='k', linestyle='--', linewidth=0.5)
ax1.axvline(x=0, color='k', linestyle='--', linewidth=0.5)

# Define the spherical mirror
radius = 4

theta = np.linspace(-np.pi/3, np.pi/3, 100)
x = radius * np.sin(theta)
y = radius * (1 - np.cos(theta))

# Plot the spherical mirror
ax1.plot(x, y, 'b-', linewidth=2, label='Spherical Mirror')

# Calculate and plot the paraxial focal point
paraxial_focal_length = radius / 2
ax1.plot([0], [paraxial_focal_length], 'ro', markersize=5, label='Paraxial Focal Point')

def reflect_ray(x0, y0):
    xc, yc = 0, radius

    # Normal vector
    nx, ny = x0 - xc, y0 - yc
    norm = np.sqrt(nx**2 + ny**2)
    nx, ny = nx/norm, ny/norm

    ix, iy = 0, -1

    # Reflected ray direction
    dot_product = 2 * (ix*nx + iy*ny)
    rx, ry = ix - dot_product*nx, iy - dot_product*ny

    return rx, ry

# Plot several reflected rays
num_rays = 10
for x0 in np.linspace(-3, 3, num_rays):
    y0 = radius - np.sqrt(radius**2 - x0**2)

    # Incident ray
    ax1.plot([x0, x0], [5, y0], 'k-', linewidth=1)

    # Reflected ray
    rx, ry = reflect_ray(x0, y0)
    t = (0 - x0) / rx  # parameter to reach x=0
    x1, y1 = x0 + t*rx, y0 + t*ry
    ax1.plot([x0, x1], [y0, y1], 'k-', linewidth=1)

ax1.set_xlabel('h')
ax1.set_ylabel('y')
ax1.grid(True, linestyle=':', alpha=0.7)
ax1.axis('equal')


def focal_length(h, R):
    return R * (1 - R / (2 * np.sqrt(R**2 - h**2)))

R = 4  # Radius of curvature
h = np.linspace(0, R*0.99, 1000)  # Range of h values (avoiding h=R which would cause division by zero)

f = focal_length(h, R)

ax2.plot(h, f, 'b-', linewidth=2)

ax2.axhline(y=R/2, color='r', linestyle='--', label='Paraxial focal length (R/2)')

ax2.set_xlabel('h')
ax2.set_ylabel('f')
ax2.grid(True, linestyle=':', alpha=0.7)

ax2.set_ylim(0, R/2 * 1.1)


plt.tight_layout()
plt.show()
```
:::

To obtain now an equation which predicts the point at which the reflected ray intersects the optical axis if it emerged at a point $A$, we just consider the following sketch.


![Image formation on a concave mirror.](img/image_concave_mirror.png){#fig-concave-mirror width="60%" fig-align="center"}

For this situation, we can write down immediately the following relations

$$\delta=\alpha+\gamma$$

$$\gamma+\beta=2\delta$$


Further under the assumption of small angles ([paraxial approximation](Optical Elements III.qmd#paraxial-approximation)) we can write down


$$\tan(\gamma) \approx \gamma = \frac{h}{g}$$
$$\tan(\beta) \approx \beta = \frac{h}{b}$$
$$\sin(\delta) \approx \delta = \frac{h}{R}$$

from which we obtain

$$\frac{h}{g}+\frac{h}{b}=2\frac{h}{R}$$

and by divding by $h$ finally the imaging equation:

$$\frac{1}{g}+\frac{1}{b}= \frac{2}{R}= \frac{1}{f}$$

where we have used the focal length $f=R/2$. This equation has some surprising property. It is completely independent of $h$ and $\gamma$. That means all points in a plane at a distance $g$ are images into a plane at a distance $b$. Both planes are therefore called conjugated planes.

::: {.callout-note}
## Imaging Equation Concave Mirror

The sum of the inverse object and image distances equals the inverse focal length of the cocave mirror.

$$\frac{1}{g}+\frac{1}{b}\approx\frac{1}{f}$$
:::

This equation now helps to construct the image of an object in front of a concave mirror and we may define 3 different rays to identify the size of an image $h_{\text{image}}$ from the size of an object $h_{\text{object}}$.

![Image formation on a concave mirror.](img/image_size.png){#fig-concave-mirror-image width="60%" fig-align="center"}

In the diagram above, three key rays are used to construct the image:

1. **Red ray:** Parallel to optical axis → reflects through focal point
2. **Green ray:** Through focal point → reflects parallel to optical axis
3. **Central ray:** Through center of curvature → reflects back along same path

The behavior of these reflected rays determines the nature of the image:

- If the rays intersect on the same side of the mirror as the object, a **real image** forms. This image is inverted, as shown in the sketch.
- If the rays diverge after reflection, they appear to intersect behind the mirror, creating a **virtual image**. This image is upright and located behind the mirror, though no actual ray intersection occurs.

The point where these rays meet (or appear to meet) determines the image size. By drawing a ray from the object's tip through the mirror's center (point O), we can easily determine the image height h_image. As an exercise, consider how this construction demonstrates that the magnification of a concave mirror is given by

$$ \frac{h_{\text{image}}}{h_{\text{object}}}=-\frac{b}{g}=M$$

This ratio indeed represents the magnification $M$. The negative sign in the expression reflects an important optical property: for real images formed by concave mirrors, the image is inverted relative to the object. This inversion is mathematically represented by the negative magnification value. Conversely, a positive magnification would indicate an upright image, which occurs with virtual images.

With the help of the imaging equation and the magnification we may in general differentiate between the following general situations:

| Object Distance | Image Characteristics | Image Position | Magnification |
|-----------------|----------------------|-----------------|---------------|
| $g > 2f$        | Real, inverted, smaller | Between f and 2f | $|m|$ < 1 |
| $g = 2f$        | Real, inverted, same size | At 2f | $|m|$ = 1 |
| $f < g < 2f$    | Real, inverted, larger | Beyond 2f | $|m|$ > 1 |
| $g = f$         | Image at infinity | At infinity | N/A |
| $g < f$         | Virtual, upright, larger | Behind mirror | $|m|$ > 1 |


::: {.callout-note collapse="true"}
## Parabolic Mirrors Focus Parallel Rays


We would like to show in the following, that a parabolic mirror is a shape which reflects all light rays parallel to the principal axis to a single point, the focus. This is a fundamental property of parabolic mirrors and is used in many optical systems, such as telescopes, satellite dishes, and car headlights.

For this purpose, we would like to use Fermat's principle. We examine a light ray originating from a point $x,y_0$ and travelling parallel to the principal axis. The light ray is reflected at a point $(x,y)$ on the mirror and travels to the focus at $(0,p)$. The light path is therefore consisting out of two linear segments $A$ and $B$ for which we have to calculate the time of travel. The total duration of the light's journey is then:
$$
t = t_A + t_B
$$

where:

  - $t_A$ is the time taken to travel from $x,y_0$ to the mirror.
  - $t_B$ is the time taken to travel from $(x,y)$ to $(0,p)$.


#### Time for Path A

The distance covered in path A is equal to $y_0 - y$, where $y$ represents the y-coordinate of the point where the ray meets the mirror. Consequently, the time taken for the light to traverse path A can be expressed as:

$$
t_A = \frac{y_0 - y}{c}
$$

In this equation, $c$ represents the speed of light in the medium.

#### Time for Path B

After reflection, the light ray travels from the point $(x, y)$ on the mirror's surface to the focal point located at $(0, p)$. The length of this segment of the path can be calculated using the distance formula:

$$
\sqrt{x^2 + (y - p)^2}
$$

Consequently, the time required for the light to traverse path B is expressed as:

$$
t_B = \frac{\sqrt{x^2 + (y - p)^2}}{c}
$$

#### Total Time

The total time for the light ray's journey is the sum of times for paths A and B:

$$
t = \frac{y_0 - y}{v} + \frac{\sqrt{x^2 + (y - p)^2}}{c}
$$

According to Fermat's principle, all light rays should take the same time. We can express this by setting the total time equal to a constant $t_c$:

$$
\frac{y_0 - y}{v} + \frac{\sqrt{x^2 + (y - p)^2}}{v} = t_c
$$

For a ray traveling along the y-axis, reflecting at $(0, 0)$, the total distance is $y_0 + p$. The time for this ray is:

$$
\frac{y_0 + p}{c}
$$

This gives us $t_c = \frac{y_0 + p}{c}$. Substituting into our general equation:

$$
\frac{y_0 - y}{v} + \frac{\sqrt{x^2 + (y - p)^2}}{c} = \frac{y_0 + p}{c}
$$

Multiplying by $c$ and rearranging:

$$
y_0 - y + \sqrt{x^2 + (y - p)^2} = y_0 + p
$$

$$
\sqrt{x^2 + (y - p)^2} = y + p
$$

Squaring both sides and simplifying:

$$
x^2 + (y - p)^2 = (y + p)^2
$$

$$
x^2 + y^2 - 2py + p^2 = y^2 + 2py + p^2
$$

$$
x^2 = 4py
$$

or

$$
y=\frac{1}{4p}x^2
$$

This final equation describes a parabola with its focus at $(0, p)$. The code below plots a parabolic mirror reflecting parallel rays to the focal point. Yet, I'm cheating a bit here. I'm not calculating the reflected rays, but just plotting them.

```{python}
#| code-fold: true
#| label: fig-parabolic-mirror
#| fig-cap: "Parabolic mirror reflecting parallel rays to focal point"

import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(4, 4))
plt.axhline(y=0, color='k', linestyle='--', linewidth=0.5)
plt.axvline(x=0, color='k', linestyle='--', linewidth=0.5)

focal_length = 2
x = np.linspace(-4, 4, 100)
y = x**2 / (4 * focal_length)


plt.plot([0], [focal_length], 'ro', markersize=5, label='Focal Point')

def plot_reflected_ray(x0, y0):
    plt.plot([x0, x0], [5, y0], 'k-', linewidth=1)

    m = 2 * (y0/x0)  # Slope of reflected ray
    x1 = 0
    y1 = focal_length
    plt.plot([x0, x1], [y0, y1], 'k-', linewidth=1)

for x0 in np.linspace(-3.5, 3.5, 8):
    y0 = x0**2 / (4 * focal_length)
    plot_reflected_ray(x0, y0)

plt.plot(x, y, 'b-', linewidth=3, label='Parabolic Mirror')

plt.xlabel('x')
plt.ylabel('y')
plt.grid(True, linestyle=':', alpha=0.7)
plt.axis('equal')
plt.tight_layout()
plt.show()
```

:::


::: {.callout-note collapse="true"}
## Elliptical Mirrors and Fermat's Principle

There is one interesting feature about elliptical mirrors: they can focus light from one focal point to the other. This is because the sum of the distances from any point on the ellipse to the two focal points is constant. This property is known as the **ellipse's geometric definition** and you can try that at home with a piece of string and two pins.

We can now apply Fermat's principle to proof that the light reflected from the ellipse travels a path length that is a saddle point. This means that the path length is stationary with respect to small perturbations in the path. Assuming for example that light travels from one focal point by a different path that is reflected from a line which is tangent to the ellipse at the point of reflection, the path length would be longer at any other point than the initial reflection point.

On the other side, if we reflect the ray on a surface that is a circle, which is intersecting the ellipse at the point of reflection, the path length would be shorter at any other point than the initial reflection point. This is a proof that the ellipse is a saddle point.


```{python}
#| echo: false
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.patches as patches

# Parameters for the ellipse
a = 5  # Semi-major axis
b = 3  # Semi-minor axis

c = np.sqrt(a**2 - b**2)
fig, ax = plt.subplots()

ellipse = patches.Ellipse((0, 0), 2*a, 2*b, edgecolor='b', facecolor='none')
ax.add_patch(ellipse)

f1 = (-c, 0)
f2 = (c, 0)
ax.plot(*f1, 'ro',ms=3)  # Focal point 1
ax.plot(*f2, 'ro',ms=3)  # Focal point 2

ax.annotate(r'$F_1$', f1, textcoords="offset points", xytext=(-10,-10), ha='center')
ax.annotate(r'$F_2$', f2, textcoords="offset points", xytext=(10,-10), ha='center')

theta = np.pi / 4  # 45 degrees
intersection_x = a * np.cos(theta)
intersection_y = b * np.sin(theta)
intersection = (intersection_x, intersection_y)

ax.plot([f1[0], intersection[0], f2[0]], [f1[1], intersection[1], f2[1]], 'g--')
ax.plot(*intersection, 'go',ms=3)  # Intersection point
ax.annotate('P', intersection, textcoords="offset points", xytext=(10,+5), ha='center')

slope = - (b**2 * intersection_x) / (a**2 * intersection_y)
x_tangent = np.linspace(1, 5.5, 400)
y_tangent = slope * (x_tangent - intersection_x) + intersection_y
ax.plot(x_tangent, y_tangent, 'r--', label='Tangent Line')

numerator = (a**2 * b**2)**(3/2)
denominator = (b**2 * intersection_x**2 + a**2 * intersection_y**2)**(3/2)
R = numerator / denominator

normal_vector = np.array([intersection_x / a**2, intersection_y / b**2])
normal_vector = normal_vector / np.linalg.norm(normal_vector)  # Normalize the vector

if np.dot(normal_vector, intersection) > 0:
    normal_vector = -normal_vector

circle_center = intersection + R * normal_vector

circle_of_curvature = patches.Circle(circle_center, R, edgecolor='purple', facecolor='none', linestyle='dotted')
ax.add_patch(circle_of_curvature)

ax.set_aspect('equal')

ax.set_xlim(-a-1, a+1)
ax.set_ylim(-b-1, b+1)

plt.xlabel('x')
plt.ylabel('y')
plt.show()
```

#### Mathematical Description

#### Ellipse Definition

Consider an ellipse with semi-major axis $a$ and semi-minor axis $b$, defined by:

$$\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1$$

##### Focal Points

The focal points are located at $F_1(-c, 0)$ and $F_2(c, 0)$, where:

$$c^2 = a^2 - b^2$$

##### Path Length

Let $P(x_0, y_0)$ be a point on the ellipse. The total path length $L$ from $F_1$ to $F_2$ via $P$ is:

$$L = |F_1P| + |PF_2| = \sqrt{(x_0+c)^2 + y_0^2} + \sqrt{(x_0-c)^2 + y_0^2}$$

##### Fermat's Principle

The path length $L$ is stationary with respect to small perturbations in $P$:

$$\frac{\partial L}{\partial x_0} = 0 \quad \text{and} \quad \frac{\partial L}{\partial y_0} = 0 \quad \text{at the reflection point}$$

##### Tangent Line

The tangent line to the ellipse at $P(x_0, y_0)$ is given by:

$$\frac{x_0x}{a^2} + \frac{y_0y}{b^2} = 1$$

Let $Q$ be any point on this tangent line different from $P$. The path $F_1 \to Q \to F_2$ is longer than $F_1 \to P \to F_2$:

$$|F_1Q| + |QF_2| > |F_1P| + |PF_2|$$

##### Circle of Curvature

The radius of curvature $R$ at $P$ is:

$$R = \frac{(a^2b^2)^{3/2}}{(b^2x_0^2 + a^2y_0^2)^{3/2}}$$

The center of curvature $C$ is located at:

$$C = P + R\cdot\mathbf{n}$$

where $\mathbf{n}$ is the unit normal vector at $P$.

Let $Q$ be any point on this circle different from $P$. The path $F_1 \to Q \to F_2$ is shorter than $F_1 \to P \to F_2$:

$$|F_1Q| + |QF_2| < |F_1P| + |PF_2|$$

As a consequence, the path length for the reflection on and ellipse between the two focal points must be a saddle point.
:::
